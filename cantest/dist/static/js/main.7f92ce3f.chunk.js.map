{"version":3,"sources":["Components/View/layout/SignedInLinks.js","store/actions/authActions.js","Components/View/layout/SignedOutLinks.js","Components/View/layout/Navbar.js","Components/View/dashboard/Notifications.js","Components/Controller/projects/ProjectSummary.js","Components/Controller/projects/ProjectList.js","Components/View/dashboard/Dasboard.js","Components/Controller/projects/ProjectDetails.js","Components/View/auth/SignIn.js","Components/View/auth/SignUp.js","Components/Controller/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","selectedFile","fileSelectedHandler","event","files","fileUploadHandler","fd","FormData","append","name","axios","post","onUploadProgress","progressEvent","Math","round","loaded","total","res","createProject","history","push","ref","fileInput","style","display","click","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7f92ce3f.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect} from \"react-redux\";\nimport {signOut} from '../../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return  (\n        <ul className='right'>\n            <li><NavLink to='/createproject'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n                </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","//import { getFirebase, firebaseReducer } from \"react-redux-firebase\"\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n            //resp.user\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n\n\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className='right'>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n    //console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return  (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">CanTest - Skin Cancer Detection</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);  ","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Notifications;","import React from 'react';\nimport ProjectList from './ProjectList';\nimport moment from 'moment';\nimport{getFirebase} from 'react-redux-firebase'\n\nconst ProjectSummary = ({project}) => {\n    \n   \n    return (\n       \n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n\n    );\n    return null\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport {Link} from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                   <Link to= {'/project/'+ project.id} key={project.id} >\n                       <ProjectSummary project={project} />\n                   </Link>\n                );\n            })}\n        </div>\n\n\n    );\n}\n\n\nexport default ProjectList;\n\n","import React, { Component } from \"react\";\nimport Notifications from './Notifications';\nimport ProjectList from '../../Controller/projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, getFirebase } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        \n            return (\n                <div className=\"dashboard container\">\n                    <div className=\"row\">\n                        <div className=\"col s12 m6\">\n                            <ProjectList  projects={projects}  />\n                        </div>\n\n                        <div className=\"col s12 m5 offset-m1\">\n                            <Notifications notifications = {notifications}/>\n                        </div>\n\n                    </div>\n                </div>\n            );\n\n\n        \n        \n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\n    ])\n)\n    (Dashboard);","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    if (project) {\n\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action gret lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n    return (\n        <div className=\"container\">\n            <p>Loading Project...</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport {signIn} from '../../../store/actions/authActions';\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError, auth} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n\n        return (\n            <div className=\"conatiner\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapstateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\nsignIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapstateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { signUp } from '../../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"conatiner\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\nimport { createProject } from '../../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: '',\n        selectedFile: null\n    }\n\n\n    fileSelectedHandler = event => {\n        console.log(event.target.files[0]);\n        this.setState({\n            selectedFile: event.target.files[0]\n        });\n    }\n    fileUploadHandler = () => {\n        const fd = new FormData();\n        fd.append('image', this.state.selectedFile, this.state.selectedFile.name);\n        axios.post('https://us-central1-imageupload-9a880.cloudfunctions.net/uploadFile', fd, {\n            onUploadProgress: progressEvent => {\n                console.log('UploadProgress: ' + Math.round((progressEvent.loaded / progressEvent.total) * 100) + '%')\n            }\n        })\n            .then(res => {\n                console.log(res);\n            });\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return (\n\n\n            <div className=\"conatiner\">\n\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <input  type=\"file\" onChange={this.fileSelectedHandler}\n                        ref={fileInput => this.fileInput = fileInput} />\n                    <button style={{ display: 'none' }} onClick={() => this.fileInput.click()}>Pick File</button>\n                    <button style={{ display: 'none' }} onClick={this.fileUploadHandler}>Upload Image</button>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\" onClick={this.fileUploadHandler}>Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirestore}) => {\n      // make async call to database\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile;\n      const authorId = getState().firebase.auth.uid;\n     // const testImage = \n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n        //testImage: \n        }).then(() => {\n            console.log('Create Hit');\n            dispatch({type: 'CREATE', project});\n        }).catch((err) => {\n            console.log('error Hit');\n            dispatch({type: 'CREATE_ERROE', err});\n        })\n        \n    }\n}","import React from 'react';\nimport { Component } from 'react'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from '../src/Components/View/layout/Navbar';\nimport Dashboard from '../src/Components/View/dashboard/Dasboard';\nimport ProjectDetails from '../src/Components/Controller/projects/ProjectDetails';\nimport SignIn from '../src/Components/View/auth/SignIn';\nimport SignUp from '../src/Components/View/auth/SignUp'\nimport CreateProject from '../src/Components/Controller/projects/CreateProject';\n\nclass App extends Component {\n\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n\n        <Navbar />\n        \n          \n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component = {ProjectDetails}/>\n            <Route path='/signin' component = {SignIn}/>\n            <Route path='/signup' component = {SignUp} />\n            <Route path='/createproject' component = {CreateProject} />\n          </Switch>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n};\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('LOGIN ERROR');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log('LOGIN SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout sucess')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n\n\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n};\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE':\n            console.log('created', action.project)\n            return state;\n        case 'CREATE_ERROR':\n            console.log('Create error', action.err)\n            return state;\n        default:\n            return state;\n    }\n   \n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDCteT6Ophq9LAqvBnc1nN6hyZFgV9qIEY\",\n    authDomain: \"imageupload-9a880.firebaseapp.com\",\n    databaseURL: \"https://imageupload-9a880.firebaseio.com\",\n    projectId: \"imageupload-9a880\",\n    storageBucket: \"imageupload-9a880.appspot.com\",\n    messagingSenderId: \"387742874102\",\n    appId: \"1:387742874102:web:1e46221f8a65c716d06fd7\",\n    measurementId: \"G-BB3F12MLQ9\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\n\nexport default firebase;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n//import { reduxFirestore, getFirestore } from 'redux-firestore';\n//import { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\n    reduxFirestore(fbConfig), // redux bindings for firestore\n\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // redux binding for firebase\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}